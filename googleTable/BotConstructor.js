

//User roles
let UserRoles = {
  without_role: "",
  admin: "admin",

}


//User Current Actions (use cases)
let UserActions = {
  without_action: "",
  input_email: "input_email",
  input_phone: "input_phone",
}

let AdminActions = {
  input_post: "input_post",
  waiting_push: "waiting_push",
  input_push: "input_push",
  input_push_b: "input_push_b",
  input_helloMessage: "input_helloMessage",
}



let BotStrings = {
  bot_start_message: "–ü—Ä–∏–≤–µ—Ç!",

  start_message_admin: {
    text: "–£ –≤–∞—Å —Ä–æ–ª—å <b>–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b> –≤ –±–æ—Ç–µ.\n–í–∞–º –¥–æ—Å—Ç—É–ø–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:"+
    "\n\n/addpost - –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø–æ—Å—Ç"+
    "\n\n/push - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"+
    "\n\n/push_button - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏"
  },

  question_instruction: {
    text: "–¢—ã –º–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ –±–æ—Ç–∞ –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –ø–æ –∫—É—Ä—Å—É –∏ –ø–æ–ª—É—á–∏—Ç—å –Ω–∞ –Ω–µ–≥–æ –æ—Ç–≤–µ—Ç!\n–í—Å–µ –¥–µ—Ç–∞–ª–∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≤–æ–ø—Ä–æ—Å–æ–º —É–∫–∞–∑—ã–≤–∞–π –≤ —Ç–æ–º –∂–µ —Å–æ–æ–±—â–µ–Ω–∏–∏."
    +"\n–í —Å–æ–æ–±—â–µ–Ω–∏–∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–æ–ø—Ä–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫ '?' üòä\n",
  }
}



// Users sheet structure
let tUsers = {
  sheetName: "Users",
  reg_date_Title: "–¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
  id_Title: "id",
  nick_Title: "–Ω–∏–∫",
  name_Title: "–∏–º—è",
  current_action_Title: "—Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ",
  role_Title: "—Ä–æ–ª—å",
  activity_Title: "–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
  email_Title: "email",
  phone_Title: "phone",
  allRange: "A:I",
  getColumnsOrder(){
    return [
      this.reg_date_Title,	
      this.id_Title,	
      this.nick_Title,	
      this.name_Title,	
      this.current_action_Title, 
      this.role_Title,
      this.activity_Title,
      this.email_Title,
      this.phone_Title
    ];
  },
  getCol(columnTitle){
    return this.getColumnsOrder().indexOf(columnTitle);
  },
  use(){
    return table.getSheetByName(this.sheetName);
  }
}

// Logs sheet structure
let LogSheet = {
  SheetName: "Log",
  time_Title: "–≤—Ä–µ–º—è",
  id_Title: "id",
  nick_Title: "–Ω–∏–∫",
  name_Title: "–∏–º—è",
  message_id_Title: "message id",
  action_Title: "–¥–µ–π—Å—Ç–≤–∏–µ",
  what_was_sent_Title: "—á—Ç–æ –ø—Ä–∏—Å–ª–∞–ª",
  bot_answer_Title: "–æ—Ç–≤–µ—Ç –±–æ—Ç–∞",
  getColumnsOrder(){
    return [this.time_Title,	this.id_Title,	this.nick_Title,	this.name_Title,	this.message_id_Title, this.action_Title,this.what_was_sent_Title,this.bot_answer_Title];
  },
  getCol(columnTitle){
    return this.getColumnsOrder().indexOf(columnTitle);
  }
}

// Debug sheet structure
let DebugSheet = {
  SheetName: "Debug",
}


// Story sheet structure
let tStories = {
  sheetName: "–ü–æ—Å—Ç—ã",
  number: "–Ω–æ–º–µ—Ä",
  message_adres_Title: "–ê–¥—Ä–µ—Å —Å–æ–æ–±—â–µ–Ω–∏—è",
  preview_Title: "–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä (–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±–æ—Ç–æ–º)",
  allRange: "A:B",
  getColumnsOrder(){
    return [
      this.number,
      this.message_adres_Title,	
      this.preview_Title
    ]
  },
  getCol(columnTitle){
    return this.getColumnsOrder().indexOf(columnTitle)+1;
  },
  getInd(columnTitle){
    return this.getColumnsOrder().indexOf(columnTitle);
  },
  use(){
    let sheet = table.getSheetByName(this.sheetName);
    if(!sheet){
      sheet = table.insertSheet(this.sheetName);
      let style = SpreadsheetApp.newTextStyle().setBold(true).setItalic(true).build();
      sheet.getRange(1,1,1,this.getColumnsOrder().length).setValues([this.getColumnsOrder()])
      .setTextStyle(style)
      .setHorizontalAlignment("center");
      sheet.setColumnWidths(2,2,300);
      sheet.deleteRows(3,990);
      sheet.deleteColumns(4,23);
    }
    return sheet;
  }
}




let tPush = {
  sheetName: "Push",
  reg_date_Title: "–¥–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
  id_Title: "id",
  nick_Title: "–Ω–∏–∫",
  name_Title: "–∏–º—è",
  current_action_Title: "—Ç–µ–∫—É—â–µ–µ –¥–µ–π—Å—Ç–≤–∏–µ",
  role_Title: "—Ä–æ–ª—å",
  activity_Title: "–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å",
  email_Title: "email",
  phone_Title: "phone",
  allRange: "A:I",
  getColumnsOrder(){
    return [
      this.reg_date_Title,	
      this.id_Title,	
      this.nick_Title,	
      this.name_Title,	
      this.current_action_Title, 
      this.role_Title,
      this.activity_Title,
      this.email_Title,
      this.phone_Title
    ];
  },
  getCol(columnTitle){
    return this.getColumnsOrder().indexOf(columnTitle);
  },
  use(){
    let sheet = table.getSheetByName(this.sheetName);
    if(!sheet){
      sheet = table.insertSheet(this.sheetName);
      let style = SpreadsheetApp.newTextStyle().setBold(true).setItalic(true).build();
      sheet.getRange(1,1,1,this.getColumnsOrder().length).setValues([this.getColumnsOrder()])
      .setTextStyle(style)
      .setHorizontalAlignment("center");
      sheet.deleteRows(3,995);
    }
    return sheet;
  }
}


// Users sheet structure
let tUsersStage = {
  sheetName: "UsersProgress",
  id_Title: "id",
  stage_Title: "—ç—Ç–∞–ø",
  allRange: "A:B",
  getColumnsOrder(){
    return [
      this.id_Title,	
      this.stage_Title,
    ];
  },
  getCol(columnTitle){
    return this.getColumnsOrder().indexOf(columnTitle);
  },
  use(){
    let sheet = table.getSheetByName(this.sheetName);
    if(!sheet){
      sheet = table.insertSheet(this.sheetName);
      let style = SpreadsheetApp.newTextStyle().setBold(true).setItalic(true).build();
      sheet.getRange(1,1,1,this.getColumnsOrder().length).setValues([this.getColumnsOrder()])
      .setTextStyle(style)
      .setHorizontalAlignment("center");
      sheet.deleteRows(3,995);
    }
    return sheet;
  }
}

// tBotValues sheet structure
let tBotValues = {
  sheetName: "BotValues",
  key_Title: "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è",
  value_Title: "–∑–Ω–∞—á–µ–Ω–∏–µ",
  botName: {
    title: "–ò–º—è –±–æ—Ç–∞:",
    cell: "B2",
    comment: "",
  },
  helloMessage: {
    title: "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:",
    cell: "B3",
    cell_preview: "C3",
  },
  getColumnsOrder(){
    return [
      [this.botName.title],	
      [this.helloMessage.title],
    ];
  },
  use(){
    let sheet = table.getSheetByName(this.sheetName);
    if(!sheet){
      sheet = table.insertSheet(this.sheetName);
      let style = SpreadsheetApp.newTextStyle().setBold(true).setItalic(true).build();
      sheet.getRange(1,1,1,2).setValues([[this.key_Title,this.value_Title]])
      .setTextStyle(style)
      .setHorizontalAlignment("center");
      sheet.getRange(2,1,this.getColumnsOrder().length,1).setValues(this.getColumnsOrder())
      .setTextStyle(style)
      .setHorizontalAlignment("center");
    }
    return sheet;
  },
  setBotName(botname){
    this.use().getRange(this.botName.cell).setValue(botname);
  },
  getBotName(){
    this.use().getRange(this.botName.cell).getValue();
  },
  setHelloMessageLink(chat_id,message_id,previewtext){
    this.use().getRange(this.helloMessage.cell).setValue(JSON.stringify({chat_id, message_id}));
    this.use().getRange(this.helloMessage.cell_preview).setValue(previewtext);
  },
  getHelloMessage(){
    return this.use().getRange(this.helloMessage.cell).getValue();
  }


}



// Story sheet structure
let tButtons = {
  sheetName: "–ö–Ω–æ–ø–∫–∏",
  text_Title: "–¢–µ–∫—Å—Ç",
  link_Title: "–°—Å—ã–ª–∫–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)",
  allRange: "A:B",
  getColumnsOrder(){
    return [
      this.text_Title,	
      this.link_Title
    ]
  },
  getCol(columnTitle){
    return this.getColumnsOrder().indexOf(columnTitle)+1;
  },
  getInd(columnTitle){
    return this.getColumnsOrder().indexOf(columnTitle);
  },
  use(){
    let sheet = table.getSheetByName(this.sheetName);
    if(!sheet){
      sheet = table.insertSheet(this.sheetName);
      let style = SpreadsheetApp.newTextStyle().setBold(true).setItalic(true).build();
      sheet.getRange(1,1,1,this.getColumnsOrder().length).setValues([this.getColumnsOrder()])
      .setTextStyle(style)
      .setHorizontalAlignment("center");
      sheet.deleteRows(3,990);
    }
    return sheet;
  }
}
